{"version":3,"sources":["banklogo.png","Components/ATMDeposit.js","Components/Account.js","App.js","reportWebVitals.js","index.js"],"names":["ATMDeposit","onChange","isDeposit","isValid","alert","console","log","className","Number","Row","Col","md","id","type","width","disabled","value","Account","useState","deposit","setDeposit","totalState","setTotalState","setIsDeposit","atmMode","setAtmMode","validTransaction","setValidTransaction","setAlert","status","onSubmit","event","preventDefault","e","target","name","App","Image","src","logo","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1f4dc926.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/banklogo.b00d71f1.png\";","import { Row, Col } from \"react-bootstrap\";\nimport React from \"react\";\n\nconst ATMDeposit = ({ onChange, isDeposit, isValid, alert }) => {\n  const choice = [\"Deposit\", \"Withdraw\"];\n  console.log(`ATM isDeposit: ${isDeposit}`);\n  return (\n    <label className=\"label huge, atm\">\n      <h3> {choice[Number(!isDeposit)]}</h3>\n      <Row>\n        <Col md={12} className=\"mt-2\">\n          <input\n            className=\"input-field\"\n            id=\"number-input\"\n            type=\"number\"\n            width=\"200\"\n            onChange={onChange}\n          ></input>\n        </Col>\n        {alert && <div className=\"alert\">* Amount not available</div>}\n        <Col md={12} className=\"mt-3\">\n          <input\n            className=\"submit-button\"\n            type=\"submit\"\n            disabled={!isValid}\n            width=\"200\"\n            value=\"Submit\"\n            id=\"submit-input\"\n          ></input>\n        </Col>\n      </Row>\n    </label>\n  );\n};\n\nexport default ATMDeposit;\n","import { Row, Col } from \"react-bootstrap\";\nimport React from \"react\";\nimport { useState } from \"react\";\nimport ATMDeposit from \"./ATMDeposit\";\n\nconst Account = () => {\n  const [deposit, setDeposit] = useState(0);\n  const [totalState, setTotalState] = useState(0);\n  const [isDeposit, setIsDeposit] = useState(true);\n  const [atmMode, setAtmMode] = useState(\"\");\n  const [validTransaction, setValidTransaction] = useState(false);\n  const [alert, setAlert] = useState(false);\n\n  let status = ` $ ${totalState} `;\n  console.log(`Account Rendered with isDeposit: ${isDeposit}`);\n  const handleChange = (event) => {\n    console.log(Number(event.target.value));\n    if (Number(event.target.value) <= 0) {\n      return setValidTransaction(false);\n    }\n    if (atmMode === \"Withdraw\" && Number(event.target.value) > totalState) {\n      setValidTransaction(false);\n      setAlert(true);\n    } else {\n      setValidTransaction(true);\n      setAlert(false);\n    }\n    setDeposit(Number(event.target.value));\n  };\n  const handleSubmit = (event) => {\n    let newTotal = isDeposit ? totalState + deposit : totalState - deposit;\n    setTotalState(newTotal);\n    setValidTransaction(false);\n    event.preventDefault();\n  };\n\n  const handleModeSelect = (event) => {\n    console.log(event.target.value);\n    setAtmMode(event.target.value);\n    setValidTransaction(false);\n    if (event.target.value === \"Deposit\") {\n      setIsDeposit(true);\n    } else {\n      setIsDeposit(false);\n    }\n  };\n\n  return (\n    <div className=\"header-form\">\n      <form onSubmit={handleSubmit}>\n        <Row>\n          <Col md={12}>\n            <h2>Account Balance</h2>\n          </Col>\n          <Col md={12}>\n            <h2>{status}</h2>\n          </Col>\n        </Row>\n        <Row className=\"mt-4\">\n          <Col md={12}>\n            <label>Select an action below to continue</label>\n          </Col>\n          <Col md={12} className=\"mt-1\">\n            <select\n              onChange={(e) => handleModeSelect(e)}\n              name=\"mode\"\n              id=\"mode-select\"\n            >\n              <option id=\"no-selection\" value=\"\"></option>\n              <option id=\"deposit-selection\" value=\"Deposit\">\n                Deposit\n              </option>\n              <option id=\"cashback-selection\" value=\"Withdraw\">\n                Withdraw\n              </option>\n            </select>\n          </Col>\n        </Row>\n        {atmMode && (\n          <ATMDeposit\n            onChange={handleChange}\n            isDeposit={isDeposit}\n            isValid={validTransaction}\n            alert={alert}\n          ></ATMDeposit>\n        )}\n      </form>\n    </div>\n  );\n};\n\nexport default Account;\n","import \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Image } from \"react-bootstrap\";\nimport logo from \"./banklogo.png\";\nimport Account from \"./Components/Account\";\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Image src={logo} />\n      <Account />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}